<Application x:Class="PlayerInterface.MusicControllerApp"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:th="clr-namespace:PlayerInterface.Themes"
             xmlns:cc="clr-namespace:PlayerInterface.CustomControls"
             Startup="Application_Startup">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="TrayIcon.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BoolVisConv" />

            <Style TargetType="Image">
                <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TText]}" />
            </Style>
            <Style TargetType="Label">
                <Setter Property="Foreground" Value="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TText]}" />
            </Style>
            <Style TargetType="CheckBox">
                <Setter Property="Foreground" Value="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TText]}" />
            </Style>
            <Style TargetType="TextBox">
                <Setter Property="Background" Value="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TBackgroundLight]}" />
                <Setter Property="Foreground" Value="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TText]}" />
            </Style>
            <Style TargetType="Button">
                <Setter Property="Background" Value="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TBackgroundLight]}" />
                <Setter Property="Foreground" Value="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TText]}" />
                <Setter Property="Padding" Value="5" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Padding="5" Background="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TBackgroundDisabled]}" >
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border BorderThickness="1" Padding="5" BorderBrush="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[THighlight]}"
                                            Background="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TBackgroundHighlight]}" >
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="ListBox">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBox">
                            <Border BorderThickness="1" BorderBrush="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TBorder]}">
                                <ScrollViewer>
                                    <VirtualizingStackPanel IsItemsHost="True" />
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border x:Name="B_ItemBorder" Background="Transparent">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter TargetName="B_ItemBorder" Property="Background" Value="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TBackgroundHighlight]}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="ToolTip">
                <Setter Property="Background" Value="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TBackgroundLight]}" />
                <Setter Property="Foreground" Value="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TText]}" />
            </Style>
            <Style TargetType="ContextMenu">
                <Setter Property="Foreground" Value="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TText]}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <Border BorderThickness="1"
                                Background="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TBackgroundLight]}"
                                BorderBrush="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TBorder]}" >
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="cc:ImageButton">
                <Setter Property="ButtonColor" Value="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TButton]}" />
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>