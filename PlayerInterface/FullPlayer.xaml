<Window x:Class="PlayerInterface.FullPlayer"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:PlayerInterface"
        xmlns:cc="clr-namespace:PlayerInterface.CustomControls"
        xmlns:vm="clr-namespace:PlayerInterface.ViewModels"
        xmlns:vme="clr-namespace:PlayerInterface.ViewModels.FolderExplore"
        xmlns:cnv="clr-namespace:PlayerInterface.ValueConverters"
        xmlns:th="clr-namespace:PlayerInterface.Themes"
        mc:Ignorable="d" d:DataContext="{d:DesignInstance Type=vm:FullPlayerViewModel}"
        Title="{Binding StatusText}" Height="{Binding Settings.WindowHeight, Mode=TwoWay, FallbackValue=390}" MinHeight="230" Width="{Binding Settings.WindowWidth, Mode=TwoWay, FallbackValue=300}" MinWidth="190" WindowStyle="None"
        PreviewKeyDown="Window_PreviewKeyDown"
        AllowsTransparency="True" ResizeMode="CanResizeWithGrip" Background="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TBackgroundLight]}">

    <Window.Resources>
        <sys:String x:Key="ActiveTag">Active</sys:String>
        <Style x:Key="TabBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="Padding" Value="4" />
            <Setter Property="BorderBrush" Value="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TBorder]}" />
            <Setter Property="BorderThickness" Value="0,0,0,2" />
            <Style.Triggers>
                <Trigger Property="Tag" Value="{StaticResource ActiveTag}">
                    <Setter Property="BorderThickness" Value="2,2,2,0" />
                    <Setter Property="Background" Value="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TBackground]}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="TimestampLabelStyle" TargetType="Label">
            <Setter Property="Margin" Value="3,0,3,0" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Background" Value="{x:Null}" />
            <Setter Property="IsHitTestVisible" Value="False" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Foreground" Value="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TText]}" />
        </Style>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Modifiers="Ctrl" Key="Left" Command="{Binding NextPrev.PreviousCommand}" />
        <KeyBinding Modifiers="Ctrl" Key="Right" Command="{Binding NextPrev.NextCommand}" />
    </Window.InputBindings>
    
    <Grid x:Name="Grid_Main">
        <Grid.RowDefinitions>
            <RowDefinition Height="34" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <StackPanel x:Name="Sp_Tabs" Grid.Column="0" Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style TargetType="Rectangle">
                        <Setter Property="Fill" Value="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TButton]}" />
                        <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}" />
                        <EventSetter Event="MouseUp" Handler="Tab_MouseUp" />
                    </Style>
                </StackPanel.Resources>
                <Border Tag="Active" x:Name="Btn_Tab_Main" Style="{StaticResource TabBorderStyle}">
                    <Rectangle ToolTip="Music">
                        <Rectangle.OpacityMask>
                            <ImageBrush ImageSource="res/img/MusicNote.png" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Border>
                <Border Tag="InActive" x:Name="Btn_Tab_Settings" Style="{StaticResource TabBorderStyle}">
                    <Rectangle ToolTip="Settings">
                        <Rectangle.OpacityMask>
                            <ImageBrush ImageSource="res/img/SettingsGear.png" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Border>
                <Border Tag="InActive" x:Name="Btn_Tab_About" Style="{StaticResource TabBorderStyle}">
                    <Rectangle ToolTip="About">
                        <Rectangle.OpacityMask>
                            <ImageBrush ImageSource="res/img/Info.png" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Border>
            </StackPanel>
            <Border Grid.Column="1" BorderThickness="0,0,0,2" BorderBrush="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TBorder]}">
                <Grid x:Name="Sp_Drag" MouseDown="Sp_Drag_MouseDown" Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="34" />
                    </Grid.ColumnDefinitions>
                    <cc:ImageButton x:Name="Btn_Minimize" Grid.Column="1" Margin="4,4,0,4" Image="res/img/MinimizeWindow.png" MouseLeftButtonDown="Btn_Minimize_MouseLeftButtonDown" />
                    <cc:ImageButton x:Name="Btn_Close" Grid.Column="2" Margin="4" Image="res/img/CloseWindow.png" MouseLeftButtonDown="Btn_Close_MouseLeftButtonDown" />
                </Grid>
            </Border>
        </Grid>
        <Grid x:Name="Grid_Tabs" Grid.Row="1" Background="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TBackground]}">
            <Grid Visibility="Visible" x:Name="Grid_Tab_Main">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                    <RowDefinition Height="30" />
                    <RowDefinition Height="20" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="30" />
                </Grid.RowDefinitions>
                <Border Grid.Row="0" BorderBrush="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TBorder]}" BorderThickness="0,0,0,2">
                    <Grid x:Name="Grid_StatusText">
                        <Grid.Resources>
                            <cnv:NegativeValueConverter x:Key="Conv_Negative" />
                            <Storyboard x:Key="Sb_StatusText" RepeatBehavior="Forever">
                                <DoubleAnimation
                                    From="{Binding ElementName=Lb_StatusText, Path=ActualWidth, Converter={StaticResource Conv_Negative}, ConverterParameter='-'}"
                                    To="{Binding ElementName=Grid_StatusText, Path=ActualWidth}"
                                    Duration="0:0:7"
                                    Storyboard.TargetName="translateStatusText"
                                    Storyboard.TargetProperty="X" />
                            </Storyboard>
                        </Grid.Resources>
                        <Grid.RenderTransform>
                            <TranslateTransform x:Name="translateStatusText" />
                        </Grid.RenderTransform>
                        <Canvas x:Name="Cv_StatusText">
                            <Label x:Name="Lb_StatusText" Content="{Binding StatusText, FallbackValue=StatusText}"
                                FontSize="17" Padding="0" Height="{Binding ElementName=Cv_StatusText, Path=ActualHeight}"
                                HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Width="Auto" />
                        </Canvas>
                    </Grid>
                </Border>
                <Grid x:Name="Grid_BasicControl" Grid.Row="1" Margin="0,0,3,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    
                    <cc:PlayButton PlayingVm="{Binding Playing}" />
                    <cc:ImageButton x:Name="Btn_Prev" Grid.Column="1" Image="res/img/Prev.png" Command="{Binding NextPrev.PreviousCommand}" />
                    <cc:ImageButton x:Name="Btn_Next" Grid.Column="2" Image="res/img/Next.png" Command="{Binding NextPrev.NextCommand}" />
                    <cc:ImageButton x:Name="Btn_Shuffle" Grid.Column="3" Image="res/img/Shuffle.png" Command="{Binding Playlist.ShuffleCommand}" />
                    <cc:ScrollSlider x:Name="Slr_Volume" Grid.Column="4" Value="{Binding Volume.MasterVolume}" ToolTip="{Binding Volume.VolumeStr}"
                        VerticalAlignment="Center" Margin="1,0" IsMoveToPointEnabled="True" TickPlacement="BottomRight"
                        Maximum="2" TickFrequency="0.1" LargeChange="0.1" SmallChange="0.01" />
                    
                </Grid>
                <Border Grid.Row="2" BorderBrush="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TBorder]}" BorderThickness="0,2,0,0">
                    <Grid x:Name="Grid_Elapsed">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="4*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <cc:ProgressControl x:Name="Pc_Elapsed" Grid.Column="0" Grid.ColumnSpan="3" IsEnabled="{Binding Playing.EnableChangeElapsed}" ProgressFill="{Binding Playing.ElapsedColor, Mode=OneWay}" Fraction="{Binding Path=Playing.ElapsedFraction, Mode=TwoWay}" ToolTip="Timestamp" />
                        <Label x:Name="Lb_Elapsed" Grid.Column="0" Style="{StaticResource TimestampLabelStyle}" Content="{Binding Playing.ElapsedStr, FallbackValue=0:00}" />
                        <Label x:Name="Lb_TrackLength" Grid.Column="2" Style="{StaticResource TimestampLabelStyle}" Content="{Binding TrackLengthStr, FallbackValue=0:00}" HorizontalAlignment="Right" />
                    </Grid>
                </Border>

                <Grid Grid.Row="3">
                    
                    <ListBox x:Name="Lb_Playlist" ItemsSource="{Binding Playlist.PlaylistItems}" Margin="2,0" SelectionMode="Extended"
                             HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                             MouseDoubleClick="Lb_Playlist_MouseDoubleClick" KeyUp="Lb_Playlist_KeyUp" AllowDrop="True" Drop="Lb_Playlist_Drop"
                             SelectionChanged="Lb_Playlist_SelectionChanged" PreviewMouseWheel="Lb_Playlist_PreviewMouseWheel" >
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="ListBoxItem.AllowDrop" Value="True" />
                                <EventSetter Event="ListBoxItem.MouseMove" Handler="SongCard_MouseMove" />
                                <EventSetter Event="ListBoxItem.DragOver" Handler="SongCard_DragOver" />
                                <EventSetter Event="ListBoxItem.DragEnter" Handler="SongCard_DragEnter" />
                                <EventSetter Event="ListBoxItem.DragLeave" Handler="SongCard_DragLeave" />
                                <EventSetter Event="ListBoxItem.Drop" Handler="SongCard_Drop" />
                                <EventSetter Event="ListBoxItem.PreviewMouseDown" Handler="SongCard_PreviewMouseDown" />
                                <EventSetter Event="ListBoxItem.MouseUp" Handler="SongCard_MouseUp" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <ContentPresenter />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type vm:SongViewModel}">
                                <Border MinHeight="42" BorderThickness="0,0,0,2">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="BorderBrush" Value="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[THighlight]}" />
                                            <Setter Property="Background" Value="Transparent" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Playing}" Value="True">
                                                    <Setter Property="Background" Value="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[THighlight]}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=IsEnabled}" Value="false">
                                                    <Setter Property="Background" Value="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TBackgroundDisabled]}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                    <Setter Property="Background" Value="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TBackgroundHighlight]}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Grid>
                                        <Grid Visibility="{Binding FrontVisibility}" ToolTip="{Binding Path}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>
                                            <Grid Grid.Row="0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <Label x:Name="Lb_Title" Padding="2" Grid.Column="0" ToolTip="{Binding Title}" FontWeight="Bold">
                                                    <TextBlock>
                                                        <TextBlock>
                                                            <TextBlock.Style>
                                                                <Style TargetType="TextBlock">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding QueueIndex}" Value="{x:Null}">
                                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                            [<TextBlock Text="{Binding QueueIndex}" />]
                                                        </TextBlock><TextBlock Text="{Binding Title}">
                                                            <TextBlock.Style>
                                                                <Style TargetType="{x:Type TextBlock}">
                                                                    <Setter Property="FontStyle" Value="Normal" />
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding IsStartupSong}" Value="False">
                                                                            <Setter Property="FontStyle" Value="Italic" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                    </TextBlock>
                                                </Label>
                                                <StackPanel Grid.Column="1" Orientation="Horizontal">
                                                    <StackPanel.Style>
                                                        <Style TargetType="{x:Type StackPanel}">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=Lb_Title}" Value="True">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </StackPanel.Style>
                                                    <StackPanel.Resources>
                                                        <Style TargetType="Label">
                                                            <Setter Property="Padding" Value="2,0" />
                                                            <Setter Property="FontSize" Value="9" />
                                                            <Setter Property="Foreground" Value="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TText]}" />
                                                        </Style>
                                                    </StackPanel.Resources>
                                                    <Label Content="{Binding TrackLengthStr}" ToolTip="Track Length" />
                                                    <Label Content="{Binding BitRateStr}" ToolTip="Bit Rate" />
                                                    <Label Content="{Binding TrackNrStr}" ToolTip="Track #" />
                                                    <Label Content="{Binding YearStr}" ToolTip="Year" />
                                                    <Label Content="{Binding PlayCountStr}">
                                                        <Label.ToolTip>
                                                            <TextBlock>
                                                                <TextBlock Text="Play Count" />
                                                                <LineBreak />
                                                                <TextBlock Text="{Binding LastPlayedStr}" />
                                                            </TextBlock>
                                                        </Label.ToolTip>
                                                    </Label>
                                                </StackPanel>
                                            </Grid>
                                            <Label Padding="2" Grid.Row="1" Content="{Binding SubTitle}" />
                                        </Grid>

                                        <Popup Placement="MousePoint" StaysOpen="False" IsOpen="{Binding IsMenuVisible}">
                                            <Border BorderBrush="Black" BorderThickness="1">
                                                <ItemsControl ItemsSource="{Binding MenuItems}">
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate DataType="{x:Type vm:SongMenuItemViewModel}">
                                                            <Border x:Name="Border_SongCard_Menu" BorderThickness="0,0,0,1" BorderBrush="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TBorder]}"
                                                                    Tag="{Binding Path=DataContext, RelativeSource={RelativeSource Mode=FindAncestor,AncestorLevel=1, AncestorType=Grid}}" MouseLeftButtonDown="Border_SongCard_Menu_MouseLeftButtonDown">
                                                                <Border.Style>
                                                                    <Style TargetType="Border">
                                                                        <Setter Property="Background" Value="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TBackgroundLight]}" />
                                                                        <Style.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Background" Value="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TBackgroundHighlight]}" />
                                                                            </Trigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Border.Style>
                                                                <Viewbox Height="20" Margin="10,5">
                                                                    <Label Padding="0" Content="{Binding Title}" />
                                                                </Viewbox>
                                                            </Border>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>
                                            </Border>
                                        </Popup>
                                        
                                        <StackPanel Height="45" Visibility="{Binding DropUnderHintVisibility}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <Label Padding="2" Content="Insert below" HorizontalContentAlignment="Center" />
                                            <Label Padding="0" Content="▼" HorizontalContentAlignment="Center" FontSize="18.667" />
                                        </StackPanel>
                                        
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                    <Canvas>
                        <Rectangle x:Name="Rect_CurPos" Fill="#A046" Width="18" Height="4" Canvas.Right="2" IsHitTestVisible="False" />
                    </Canvas>
                </Grid>

                <Label x:Name="Lb_DropHint" Grid.Row="3" Content="Drag &amp; Drop files here!" Visibility="{Binding ShowDropHint}"
                       HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontWeight="Bold" FontSize="21.333"
                       Background="{x:Null}" Foreground="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TText]}"
                       AllowDrop="True" Drop="Lb_Playlist_Drop" />
                
                <Grid x:Name="Grid_Footer" Grid.Row="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="2*" />
                    </Grid.ColumnDefinitions>
                    <cc:ImageButton x:Name="Btn_Sort" Grid.Column="0" Image="res/img/Sort.png" MouseUp="Btn_Sort_MouseUp" Loaded="Btn_Sort_Loaded" ToolTip="Sort">
                        <cc:ImageButton.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Reverse" Command="{Binding Playlist.ReverseSortCommand}" />
                                <Separator />
                                <MenuItem Header="Current search" Command="{Binding Playlist.SortBySearchCommand}" />
                            </ContextMenu>
                        </cc:ImageButton.ContextMenu>
                    </cc:ImageButton>
                    <Viewbox Grid.Column="1" HorizontalAlignment="Left">
                        <Label Content="{Binding PlaylistStats, FallbackValue='[STATS]'}" />
                    </Viewbox>
                    <TextBox x:Name="Tb_Search" Margin="3" Grid.Column="2" ToolTip="RegEx Search"
                        GotKeyboardFocus="Tb_Search_GotKeyboardFocus"
                        PreviewKeyDown="Tb_Search_PreviewKeyDown"
                        Text="{Binding Path=Playlist.SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Background="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TBackgroundLight]}"
                        Foreground="{Binding Source={x:Static th:ThemeManager.Instance}, Path=Theme[TText]}" />
                </Grid>
            </Grid>
            <Grid Visibility="Collapsed" x:Name="Grid_Tab_Settings">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="40" />
                </Grid.RowDefinitions>
                <ScrollViewer Grid.Row="0">
                    <StackPanel x:Name="Sp_Settings" Orientation="Vertical" Margin="10">
                        <Label Content="General:" FontWeight="Bold" FontSize="16" Padding="0" />
                        <CheckBox x:Name="Cb_StartMinimized" Content="Start Minimized" IsChecked="{Binding SettingsViewModel.StartMinimized}" />

                        <Separator />

                        <Grid x:Name="Grid_Settings_Timing">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <!-- Delay between songs-->
                            <Label Grid.Row="0" Grid.Column="0" Content="Delay between songs:" />
                            <TextBox Grid.Row="0" Grid.Column="1" MinWidth="50" Margin="2" Text="{Binding SettingsViewModel.SongTransitionDelay}" />
                            <Label Grid.Row="0" Grid.Column="2" Content="Ms" />
                            <!-- Screenoverlay delay-->
                            <Label Grid.Row="1" Grid.Column="0" Content="Show screenoverlay for:" />
                            <TextBox Grid.Row="1" Grid.Column="1" MinWidth="50" Margin="2" Text="{Binding SettingsViewModel.ScreenOverlayShowTimeMs}" />
                            <Label Grid.Row="1" Grid.Column="2" Content="Ms" />
                        </Grid>

                        <Grid Margin="0,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Label Grid.Column="0" Content="Theme:" />
                            <ListBox Grid.Column="1" ItemsSource="{x:Static th:ThemeManager.AvailableThemes}" SelectedItem="{Binding SettingsViewModel.Theme}">
                                <ListBox.Template>
                                    <ControlTemplate TargetType="ListBox">
                                        <WrapPanel IsItemsHost="True" VerticalAlignment="Center" />
                                    </ControlTemplate>
                                </ListBox.Template>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Border Margin="5">
                                            <ContentPresenter Content="{Binding}" />
                                        </Border>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Grid>

                        <Button Content="Export current playlist" Command="{Binding Playlist.ExportCommand}" />

                        <Separator />
                        <Label Margin="0,3,0,0" Content="Replay gain normalization:" FontWeight="Bold" FontSize="16" Padding="0" />
                        <CheckBox Content="Read file Album/Track gain tags" IsChecked="{Binding SettingsViewModel.UseFileGain}" />

                        <StackPanel Orientation="Horizontal">
                            <Label Content="Gain preamp:" />
                            <TextBox MinWidth="50" Margin="2" Text="{Binding SettingsViewModel.GainPreampDb}" />
                            <Label Content="dB" />
                        </StackPanel>

                        <TextBlock Text="{Binding Playing.CurrentGainStr}" FontStyle="Italic" />

                        <Separator />
                        <Label Margin="0,3,0,0" Content="Scrobbler:" FontWeight="Bold" FontSize="16" Padding="0" />

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <Label Content="Usr/Pwd:" />
                            <TextBox Grid.Column="1" Margin="2" Text="{Binding SettingsViewModel.LastfmUser}" />
                            <PasswordBox Grid.Column="2" Margin="2" x:Name="Pwd_Lastfm" />
                        </Grid>

                        <StackPanel Orientation="Horizontal" FlowDirection="RightToLeft">
                            <Button Content="Logout" Margin="2" IsEnabled="{Binding SettingsViewModel.LastfmAuthed}" Command="{Binding LastfmLogoutCmd}" />
                            <Button Content="Login" Margin="2" IsEnabled="{Binding SettingsViewModel.LastfmNotAuthed}" Click="Bt_LastfmLogin_Click" />
                        </StackPanel>
                        
                        <Separator />
                        <Label Margin="0,3,0,0" Content="Load on startup:" FontWeight="Bold" FontSize="16" Padding="0" />
                        <TreeView x:Name="Tv_Settings_StartupLoad" Height="200" ItemsSource="{Binding SettingsViewModel.LoadPaths}"
                            Background="Transparent">
                            <TreeView.Resources>
                                <HierarchicalDataTemplate DataType="{x:Type vme:ExplorerFolder}" ItemsSource="{Binding Children}">
                                    <StackPanel Orientation="Horizontal" Height="18" Margin="1">
                                        <Image Height="16" Margin="2" Source="res/img/Open.png" />
                                        <CheckBox IsTabStop="False" IsThreeState="{Binding IsThreeState}" IsChecked="{Binding CheckedState}" Content="{Binding Name}" />
                                    </StackPanel>
                                </HierarchicalDataTemplate>
                                <HierarchicalDataTemplate DataType="{x:Type vme:ExplorerFile}">
                                    <StackPanel Orientation="Horizontal" Margin="1">
                                        <Image Height="16" Margin="2" Source="res/img/File.png" />
                                        <CheckBox IsTabStop="False" IsThreeState="{Binding IsThreeState}" IsChecked="{Binding CheckedState}" Content="{Binding Name}" />
                                    </StackPanel>
                                </HierarchicalDataTemplate>
                            </TreeView.Resources>
                        </TreeView>
                    </StackPanel>
                </ScrollViewer>
                <StackPanel x:Name="Sp_Settings_Footer" Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Margin="5"  Padding="5" Content="View File" Command="{Binding SettingsViewModel.OpenFileLocationCommand}" />
                    <Button Margin="5" Padding="5" Content="Save to Disk" Command="{Binding SettingsViewModel.SaveToDiskCommand}" />
                </StackPanel>
            </Grid>
            <Grid Visibility="Collapsed" x:Name="Grid_Tab_About">
                <StackPanel Orientation="Vertical" Margin="10">
                    <Label Content="About" FontWeight="Bold" FontSize="16" Padding="0" />
                    <TextBlock Text="By: GitHub.com/GWigWam" />
                    <TextBlock>
                        <Hyperlink NavigateUri="http://www.GitHub.com/GWigWam/MusicController" RequestNavigate="Hyperlink_RequestNavigate">
                            GitHub repository
                        </Hyperlink>
                    </TextBlock>
                    <TextBlock>
                        <Hyperlink NavigateUri="http://www.GitHub.com/GWigWam/MusicController/blob/master/README.md" RequestNavigate="Hyperlink_RequestNavigate">
                            Readme
                        </Hyperlink>
                    </TextBlock>
                </StackPanel>
            </Grid>
        </Grid>
    </Grid>
</Window>